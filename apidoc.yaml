openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
  description: API Description
  contact:
    name: API Contact
    email: myemail@email.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: https://localhost:8080/api/v1
    description: Localhost server
  - url: https://api.example.com/api/v1
    description: Production server
tags:
  - name: beers
    description: Beers
  - name: books
    description: Books
paths:
  /beers:
    get:
      summary: Get beers from API
      description: Get beers from API with optional filters by name and ABV
      operationId: getBeers
      tags:
        - "beers"
      parameters: 
        - name: name
          in: query
          description: Beer name
          required: false
          schema:
            type: string
        - name: abv_gte
          in: query
          description: ABV greater than or equal to
          required: false
          schema:
            type: number
        - name: abv_lte
          in: query
          description: ABV less than or equal to
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BeerResponse'
        '400':
          description: Bad Request, invalid parameters. Check the response message for more details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
  /library/books:
    get:
      summary: Get books
      description: Get books with optional filters by name and author
      operationId: getBooks
      tags:
        - "books"
      parameters: 
        - name: name
          in: query
          description: Book name
          required: false
          schema:
            type: string
        - name: author
          in: query
          description: Book author
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error400'
    post:
      summary: Create book
      description: Create book with name, author, ISBN and description
      operationId: createBook
      tags:
        - "books"
      requestBody:
        description: Book object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '201':
          description: Created book successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
  /library/books/{id}:
    put:
      description: Update book
      operationId: updateBook
      tags:
        - "books"
      parameters:
        - name: id
          in: path
          description: Book id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Book object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
    delete:
      description: Delete book
      operationId: deleteBook
      tags:
        - "books"
      parameters:
        - name: id
          in: path
          description: Book id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

# objects
components:
  schemas:
    BeerResponse:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: Punk IPA 2007
        tagline:
          type: string
          example: Post Modern Classic. Spiky. Tropical. Hoppy.
        first_brewed:
          type: string
          example: 04/2007
        description:
          type: string
          example: Our flagship beer that kick started the craft beer revolution. This is James and Martin's original take on an American IPA, subverted with punchy New Zealand hops. Intense pine and kiwi fruit coupled with a big hop hit.
        image_url:
          type: string
          example: https://images.punkapi.com/v2/192.png
        abv:
          type: number
          example: 6.0
        ibu:
          type: number
          example: 60.0
        ebc:
          type: number
          example: 20.0
    BookRequest:
      type: object
      properties:
        name:
          type: string
          example: The Hobbit
        author:
          type: string
          example: J.R.R. Tolkien
        isbn:
          type: string
          example: 978-3-16-148410-0
        description:
          type: string
          example: The Hobbit is a tale of high adventure, undertaken by a company of dwarves in search of dragon-guarded gold.
    BookResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        author:
          type: string
        isbn:
          type: string
        description:
          type: string
    Error400:
      type: object
      properties:
        message:
          type: string
          example: Bad Request
        code:
          type: number
          example: 400
    Error404:
      type: object
      properties:
        message:
          type: string
          example: Not Found
        code:
          type: number
          example: 404
        
    

